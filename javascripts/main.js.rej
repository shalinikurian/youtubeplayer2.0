diff a/javascripts/main.js b/javascripts/main.js	(rejected hunks)
@@ -1,6 +1,9 @@
 //events
 var vent = _.extend({} , Backbone.Events);
 
+/*
+ * pretty print duration for display
+ */
 var durationForDisplay = function(secs){
   var hrs = Math.floor(secs/3600);
   var rem = secs % 3600;
@@ -308,22 +377,31 @@ var PlayListView = Backbone.View.extend({
     this.playlistView.append(songListTemplate());
     
     _.each(this.model.songs.models, function(song){
-      var songView = new SongView({model: song});
+      var songView = new SongView({model: song, songCollection: this.model.songs});
       $("#songs").append(songView.render().el);
-    });
+    }.bind(this));
     
   }
 
 });
 
+/*
+ * song view
+ */
+
 var SongView = Backbone.View.extend({
   tagName: 'tr',
 
   events: {
     'click' : 'playSong',
+    'click .delete' : 'deleteSong'
   },
   
-  initialize: function() {
+  /*
+   * initialize with information of song collection and row 
+   */
+  initialize: function(options) {
+    this.songCollection = options.songCollection;
     var evenRow = (this.model.get('order') % 2 == 0 );
     if (evenRow) $(this.el).addClass('even_row');
     else $(this.el).addClass('odd_row');
@@ -336,6 +414,17 @@ var SongView = Backbone.View.extend({
     return this;
   },
   
+  /*
+   * on delete song , unbind event , remove view and reorder playlist song collection order
+   */
+  deleteSong: function(evt) {
+    this.remove();
+    this.unbind();
+    //reorder songs after delete
+    this.model.destroy();
+    this.songCollection.reorderAfterDelete();
+  },
+  
   playSong: function(evt) { //TODO
   }
 });
