From 6fdf726be4fca565f7fbc450e5270bd29333b36d Mon Sep 17 00:00:00 2001
From: Rajiv Kurian <geetasen@gmail.com>
Date: Sat, 8 Dec 2012 22:03:46 -0800
Subject: [PATCH] youtube minor temporary css changes

---
 12.patch                   |  197 ++++++++++++++++++++++++++++++++++++++++++++
 stylesheets/stylesheet.css |   36 ++++----
 2 files changed, 218 insertions(+), 15 deletions(-)
 create mode 100644 12.patch

diff --git a/12.patch b/12.patch
new file mode 100644
index 0000000..39653a3
--- /dev/null
+++ b/12.patch
@@ -0,0 +1,197 @@
+From e598930406901b8dd7a8ccf9402ebc9a5c30607a Mon Sep 17 00:00:00 2001
+From: Rajiv Kurian <geetasen@gmail.com>
+Date: Sat, 8 Dec 2012 21:56:11 -0800
+Subject: [PATCH 1/2] youtube javascript stuff
+
+---
+ javascripts/main.js |   68 +++++++++++++++++++++++++++++++++++++++++++++++++--
+ 1 file changed, 66 insertions(+), 2 deletions(-)
+
+diff --git a/javascripts/main.js b/javascripts/main.js
+index c88b867..6a61480 100644
+--- a/javascripts/main.js
++++ b/javascripts/main.js
+@@ -1,7 +1,64 @@
+ //events
+ var vent = _.extend({} , Backbone.Events);
+ 
+-var YoutubePlayer = {};
++var YoutubePlayerView = Backbone.View.extend({
++  initialize: function(options) {
++    this.apiReady = false;
++    this.panelShowing = 0;
++    this.vent = options.vent;
++    _.bindAll(this, 'youTubePlayerAPIReady', 'playSong', 'playerReady', 'stateChanged', 'videoEnded', 'apiError');
++
++    //Add youtube script
++    options.vent.bind("YouTubePlayerAPIReady", this.youTubePlayerAPIReady);
++    var tag = document.createElement('script');
++    tag.src = "http://www.youtube.com/player_api";
++    var firstScriptTag = document.getElementsByTagName('script')[0];
++    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
++  },
++
++  youTubePlayerAPIReady : function() {
++  this.apiReady = true;
++  },
++
++  playSong: function(song) {
++   if (this.apiReady) {
++      var songUrl = song.get("song_id");
++      if (this.player) {
++        this.player.loadVideoById(songUrl)
++      } else this.player = new YT.Player('video_player_container', {
++          width: 400,
++          height: 280,
++          videoId: songUrl,
++          events: {
++            'onReady': this.playerReady,
++            'onPlaybackQualityChange': this.playerReady,
++            'onStateChange': this.stateChanged,
++            'onError': this.errorz
++          }
++        });
++      } else alert("api not ready");
++  },
++
++    playerReady: function(event) {
++      console.log("In playerReady function ready to play")
++       this.player.playVideo();
++    },
++
++    stateChanged: function(event) {
++      if (event.data == YT.PlayerState.ENDED) {
++        this.videoEnded()
++      }
++    },
++
++    videoEnded: function() {
++      // Let other parties know that a video ended.
++      console.log("video ended")
++    },
++
++    apiError: function(error) {
++      alert("Error is " + error)
++    }
++  });
+ 
+ var durationForDisplay = function(secs){
+   var hrs = Math.floor(secs/3600);
+@@ -19,6 +76,7 @@ var durationForDisplay = function(secs){
+   str = str + min.toString() + " m "+ secsStr + " s ";
+   return str;
+ }
++
+ /*
+  * Models
+  */
+@@ -160,6 +218,7 @@ var SearchResultSongView = Backbone.View.extend({
+ 
+   // TODO(rajivkurian): Implement this.
+   playSong: function() {
++    YoutubePlayer.playSong(this.model)
+   }
+ });
+ 
+@@ -389,6 +448,10 @@ var PlayListCollection = Backbone.Collection.extend({
+     return playlist.get('order');
+   }
+ });
++
++  function onYouTubePlayerAPIReady() {
++    vent.trigger("YouTubePlayerAPIReady");
++  }
+ /*
+  * Initialize the application
+  */
+@@ -397,8 +460,9 @@ function appInit() {
+   window.playlistsCollection = new PlayListCollection;
+   playlistsCollection.fetch();
+   window.playListsView = new PlayListsView({vent: vent});
++  window.YoutubePlayer = new YoutubePlayerView({vent: vent})
+ }
+ 
+ $(document).ready(function() {
+   appInit();
+-});
++});
+\ No newline at end of file
+-- 
+1.7.10
+
+
+From 0882f90c38fba33ea278c662f9fe458e19069c84 Mon Sep 17 00:00:00 2001
+From: Rajiv Kurian <geetasen@gmail.com>
+Date: Sat, 8 Dec 2012 22:00:00 -0800
+Subject: [PATCH 2/2] youtube javascript stuff
+
+---
+ javascripts/main.js |   16 ++++++++--------
+ 1 file changed, 8 insertions(+), 8 deletions(-)
+
+diff --git a/javascripts/main.js b/javascripts/main.js
+index 6a61480..9c56c18 100644
+--- a/javascripts/main.js
++++ b/javascripts/main.js
+@@ -349,9 +349,9 @@ var PlayListView = Backbone.View.extend({
+     this.playlistView.html('').show();
+     var noOfSongs = this.model.songs.length;
+     if (noOfSongs == 0 ){
+-      
++
+     } else {
+-      
++
+     }
+     var playlistTemplate = (noOfSongs == 0) ? (_.template($('#playlist_info_template_no_songs').html())) : (_.template($('#playlist_info_template').html()));
+     var variables = (noOfSongs == 0) ? {} : {"thumbnail1": this.model.songs.last().get('thumbnail')};
+@@ -360,19 +360,19 @@ var PlayListView = Backbone.View.extend({
+     var generalInfoTemplate = _.template($('#playlist_info_template_general').html());
+     variables = {
+       "title":this.model.get('name'),
+-      "noOfSongs" : this.model.songs.length , 
++      "noOfSongs" : this.model.songs.length ,
+       "duration": (noOfSongs == 0 ) ? '0 s' : this.model.playlistDuration()
+     };
+     this.playlistView.append(generalInfoTemplate(variables));
+     //add song list
+     var songListTemplate = _.template($('#songs_list').html());
+     this.playlistView.append(songListTemplate());
+-    
++
+     _.each(this.model.songs.models, function(song){
+       var songView = new SongView({model: song});
+       $("#songs").append(songView.render().el);
+     });
+-    
++
+   }
+ 
+ });
+@@ -383,20 +383,20 @@ var SongView = Backbone.View.extend({
+   events: {
+     'click' : 'playSong',
+   },
+-  
++
+   initialize: function() {
+     var evenRow = (this.model.get('order') % 2 == 0 );
+     if (evenRow) $(this.el).addClass('even_row');
+     else $(this.el).addClass('odd_row');
+   },
+-  
++
+   render: function() {
+     var songTemplate = eachSongTemplate = _.template($('#playlist_song').html());
+     var songVariables = {"track": this.model.get('title'), "duration":this.model.get('duration'), "thumbnail": this.model.get('thumbnail')};
+     $(this.el).html(eachSongTemplate(songVariables));
+     return this;
+   },
+-  
++
+   playSong: function(evt) { //TODO
+   }
+ });
+-- 
+1.7.10
+
diff --git a/stylesheets/stylesheet.css b/stylesheets/stylesheet.css
index 61a1a64..2677e01 100644
--- a/stylesheets/stylesheet.css
+++ b/stylesheets/stylesheet.css
@@ -84,10 +84,10 @@ body {
 
 .middle_container {
     position: fixed;
-    left:250px;
+    left:200px;
     bottom: 0px;
     top : 45px;
-    width: 700px;
+    width: 500px;
     background-color: #373737;
     margin-left: 5px;
     margin-top: 5px;
@@ -110,19 +110,19 @@ body {
         color: white;
         text-align: center;
     }
-    
+
     .thumbnail {
         position: relative;
         left: 50px;
         width: 120px;
         height: 90px;
-    
+
     }
-    
+
     .thumbnail:hover {
         cursor: pointer;
     }
-    
+
     .reflection {
         position: relative;
         left: 50px;
@@ -144,15 +144,15 @@ body {
         filter: flipv; opacity:0.20;
         filter: alpha(opacity='20');
     }
-    
-    .overlay { 
+
+    .overlay {
         position:absolute; top:0px; left:0px; width:120px; height:90px;
         background-image:     -webkit-gradient( linear, left bottom, left top, color-stop(0.60, rgb(55,55,55)), color-stop(0.75, rgba(46,46,46,0)));
         background-image: -moz-linear-gradient( center bottom, rgb(55,55,55) 60%, rgba(46,46,46,0) 75%);
         background-image:   -o-linear-gradient( rgba(46,46,46,0) 25%, rgb(55,55,55) 40%);
         background-image:     -webkit-gradient( linear, left bottom, left top, color-stop(0.60, rgb(55,55,55)), color-stop(0.75, rgba(46,46,46,0)));
     }
-    
+
     .duration {
         position: relative;
         display: inline-block;
@@ -166,7 +166,7 @@ body {
         padding-bottom: 2px;
         border-radius : 2px;
     }
-    
+
 /*
  * playlists view
  */
@@ -184,11 +184,11 @@ body {
         padding: 5px;
         font-size: 16px;
     }
-    
+
     .playlistItem:hover {
         cursor: pointer;
     }
-            
+
         .delete {
             background: url('../images/delete.png') no-repeat;
             height: 20px;
@@ -232,7 +232,7 @@ body {
     padding: 10px;
     border-radius: 10px;
     position: absolute;
-    
+
 }
 
 #playlist_time {
@@ -247,7 +247,7 @@ body {
 }
 
 /*
-* song list 
+* song list
 */
 #songs {
   padding-top: 10px;
@@ -272,7 +272,7 @@ body {
 }
 
 /*
- * song view 
+ * song view
  */
 
 .small_thumb {
@@ -287,4 +287,10 @@ body {
 .even_row {
   background-color: #313131;
 }
+/* video player */
 
+#video_player_container {
+  position : fixed;
+  left: 790px;
+  top: 150px;
+}
\ No newline at end of file
-- 
1.7.10

